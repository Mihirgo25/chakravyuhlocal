
CREATE TABLE brahmastra.kafka_air_freight_rate_statistics
(
    `data` String
)
ENGINE = Kafka('127.0.0.1:29092', 'arc.public.air_freight_rate_statistics_temp', '001','JSONAsString');

CREATE MATERIALIZED VIEW brahmastra.air_freight_before_rate_statistics TO brahmastra.air_freight_rate_statistics
(
    `id` UInt256,
    `identifier` FixedString(256),
    `validity_id` UUID,
    `rate_id` UUID,
    `origin_airport_id` UUID,
    `destination_airport_id` UUID,
    `origin_country_id` UUID,
    `destination_country_id` UUID,
    `origin_continent_id` UUID,
    `destination_continent_id` UUID,
    `origin_region_id` UUID,
    `destination_region_id` UUID,
    `origin_trade_id` UUID,
    `destination_trade_id` UUID,
    `origin_pricing_zone_map_id` UUID,
    `destination_pricing_zone_map_id` UUID,
    `price` Float64,
    `lower_limit` Float64,
    `upper_limit` Float64,
    `standard_price` Float64,
    `currency` FixedString(3),
    `validity_start` Date,
    `validity_end` Date,
    `density_category` FixedString(256),
    `max_density_weight` Float64,
    `min_density_weight` Float64,
    `airline_id` UUID,
    `service_provider_id` UUID,
    `accuracy` Float64 DEFAULT -1.0,
    `source` FixedString(256),
    `likes_count` UInt16 DEFAULT 0,
    `dislikes_count` UInt16 DEFAULT 0,
    `feedback_recieved_count` UInt16 DEFAULT 0,
    `dislikes_rate_reverted_count` UInt16 DEFAULT 0,
    `spot_search_count` UInt16 DEFAULT 0,
    `buy_quotations_created` UInt16 DEFAULT 0,
    `sell_quotations_created` UInt16 DEFAULT 0,
    `checkout_count` UInt16 DEFAULT 0,
    `bookings_created` UInt16 DEFAULT 0,
    `rate_created_at` DateTime DEFAULT now(),
    `rate_updated_at` DateTime DEFAULT now(),
    `validity_created_at` DateTime DEFAULT now(),
    `validity_updated_at` DateTime DEFAULT now(),
    `commodity` FixedString(256),
    `commodity_type` FixedString(256),
    `commodity_sub_type` FixedString(256),
    `operation_type` FixedString(256),
    `shipment_type` FixedString(256),
    `stacking_type` FixedString(256),
    `origin_local_id` UUID,
    `destination_local_id` UUID,
    `surcharge_id` UUID,
    `cogo_entity_id` UUID,
    `price_type` FixedString(256),
    `rate_type` FixedString(256),
    `sourced_by_id` UUID,
    `procured_by_id` UUID,
    `shipment_aborted_count` UInt16 DEFAULT 0,
    `shipment_cancelled_count` UInt16 DEFAULT 0,
    `shipment_completed_count` UInt16 DEFAULT 0,
    `shipment_confirmed_by_service_provider_count` UInt16 DEFAULT 0,
    `shipment_awaited_service_provider_confirmation_count` UInt16 DEFAULT 0,
    `shipment_init_count` UInt16 DEFAULT 0,
    `shipment_flight_arrived_count` UInt16 DEFAULT 0,
    `shipment_flight_departed_count` UInt16 DEFAULT 0,
    `shipment_cargo_handed_over_at_destination_count` UInt16 DEFAULT 0,
    `shipment_is_active_count` UInt16 DEFAULT 0,
    `shipment_in_progress_count` UInt16 DEFAULT 0,
    `shipment_received_count` UInt16 DEFAULT 0,
    `created_at` DateTime DEFAULT now(),
    `updated_at` DateTime DEFAULT now(),
    `version` UInt32 DEFAULT 1,
    `sign` Int8 DEFAULT 1,
    `revenue_desk_visit_count` UInt16 DEFAULT 0,
    `so1_visit_count` UInt16 DEFAULT 0,
    `status` FixedString(10) DEFAULT 'active',
    `last_action` FixedString(10) DEFAULT 'create',
    `rate_deviation_from_booking_rate` Float32 DEFAULT 0,
    `rate_deviation_from_booking_on_cluster_base_rate` Float32 DEFAULT 0,
    `rate_deviation_from_latest_booking` Float32 DEFAULT 0,
    `average_booking_rate` Float64 DEFAULT -1,
    `parent_rate_id` UUID,
    `booking_rate_count` UInt16 DEFAULT 0,
    `parent_validity_id` UUID,
    `height` Float64 DEFAULT 0,
    `breadth` Float64 DEFAULT 0,
    `length` Float64 DEFAULT 0,
    `maximum_weight` Float64 DEFAULT 0,
    `flight_uuid` UUID,
    `discount_type` FixedString(256),
    `importer_exporter_id` UUID,
    `rate_not_available_entry` Bool DEFAULT true,
    `shipment_cargo_handed_over_at_origin_count` UInt16,
    `shipment_confirmed_by_importer_exporter_count` UInt16 ,
    `rate_deviation_from_cluster_base_rate` Float64 DEFAULT 0,
    `performed_by_id` UUID,
    `performed_by_type` FixedString(256),
    `operation_created_at` DateTime,
    `operation_updated_at` DateTime,
    `is_deleted` Bool DEFAULT false
) AS
SELECT
    JSONExtractInt(data, 'before','id') AS id,
    toUUIDOrZero(JSONExtractString(data, 'before','identifier')) AS identifier,
    toUUIDOrZero(JSONExtractString(data, 'before','validity_id')) AS validity_id,
    toUUIDOrZero(JSONExtractString(data, 'before','rate_id')) AS rate_id,
    toUUIDOrZero(JSONExtractString(data, 'before','origin_airport_id')) AS origin_airport_id,
    toUUIDOrZero(JSONExtractString(data, 'before','destination_airport_id')) AS destination_airport_id,
    toUUIDOrZero(JSONExtractString(data, 'before','origin_country_id')) AS origin_country_id,
    toUUIDOrZero(JSONExtractString(data, 'before','destination_country_id')) AS destination_country_id,
    toUUIDOrZero(JSONExtractString(data, 'before','origin_continent_id')) AS origin_continent_id,
    toUUIDOrZero(JSONExtractString(data, 'before','destination_continent_id')) AS destination_continent_id,
    toUUIDOrZero(JSONExtractString(data, 'before','origin_region_id')) AS origin_region_id,
    toUUIDOrZero(JSONExtractString(data, 'before','destination_region_id')) AS destination_region_id,
    toUUIDOrZero(JSONExtractString(data, 'before','origin_trade_id')) AS origin_trade_id,
    toUUIDOrZero(JSONExtractString(data, 'before','destination_trade_id')) AS destination_trade_id,
    toUUIDOrZero(JSONExtractString(data, 'before','origin_pricing_zone_map_id')) AS origin_pricing_zone_map_id,
    toUUIDOrZero(JSONExtractString(data, 'before','destination_pricing_zone_map_id')) AS destination_pricing_zone_map_id,
    toUUIDOrZero(JSONExtractString(data, 'before','price')) AS price,
    toUUIDOrZero(JSONExtractString(data, 'before','lower_limit')) AS lower_limit,
    toUUIDOrZero(JSONExtractString(data, 'before','upper_limit')) AS upper_limit,
    toUUIDOrZero(JSONExtractString(data, 'before','standard_price')) AS standard_price,
    JSONExtractString(data, 'before','currency') AS currency,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','validity_start')) AS validity_start,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','validity_end')) AS validity_end,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','density_category')) AS density_category,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','max_density_weight')) AS max_density_weight,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','min_density_weight')) AS min_density_weight,
    toUUIDOrZero(JSONExtractString(data, 'before','airline_id')) AS airline_id,
    toUUIDOrZero(JSONExtractString(data, 'before','service_provider_id')) AS service_provider_id,
    toUUIDOrZero(JSONExtractString(data, 'before','accuracy')) AS accuracy,
    toUUIDOrZero(JSONExtractString(data, 'before','source')) AS source,
    toUUIDOrZero(JSONExtractString(data, 'before','likes_count')) AS likes_count,
    JSONExtractInt(data, 'before','dislikes_count') AS dislikes_count,
    JSONExtractInt(data, 'before','feedback_recieved_count') AS feedback_recieved_count,
    JSONExtractInt(data, 'before','dislikes_rate_reverted_count') AS dislikes_rate_reverted_count,
    JSONExtractInt(data, 'before','spot_search_count') AS spot_search_count,
    JSONExtractInt(data, 'before','buy_quotations_created') AS buy_quotations_created,
    JSONExtractInt(data, 'before','sell_quotations_created') AS sell_quotations_created,
    JSONExtractInt(data, 'before','checkout_count') AS checkout_count,
    JSONExtractInt(data, 'before','bookings_created') AS bookings_created,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','rate_created_at')) AS rate_created_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','rate_updated_at')) AS rate_updated_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','validity_created_at')) AS validity_created_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','validity_updated_at')) AS validity_updated_at,
    JSONExtractString(data, 'before','commodity') AS commodity,
    JSONExtractString(data, 'before','commodity_type') AS commodity_type,
    JSONExtractString(data, 'before','commodity_sub_type') AS commodity_sub_type,
    JSONExtractInt(data, 'before','operation_type') AS operation_type,
    JSONExtractString(data, 'before','shipment_type') AS shipment_type,
    JSONExtractString(data, 'before','stacking_type') AS stacking_type,
    toUUIDOrZero(JSONExtractString(data, 'before','origin_local_id')) AS origin_local_id,
    toUUIDOrZero(JSONExtractString(data, 'before','destination_local_id')) AS destination_local_id,
    toUUIDOrZero(JSONExtractString(data, 'before','surcharge_id')) AS surcharge_id,
    toUUIDOrZero(JSONExtractString(data, 'before','cogo_entity_id')) AS cogo_entity_id,
    JSONExtractString(data, 'before','price_type') AS price_type,
    JSONExtractString(data, 'before','rate_type') AS rate_type,
    toUUIDOrZero(JSONExtractString(data, 'before','sourced_by_id')) AS sourced_by_id,
    toUUIDOrZero(JSONExtractString(data, 'before','procured_by_id')) AS procured_by_id,
    JSONExtractInt(data, 'before','shipment_aborted_count') AS shipment_aborted_count,
    JSONExtractInt(data, 'before','shipment_cancelled_count') AS shipment_cancelled_count,
    JSONExtractInt(data, 'before','shipment_completed_count') AS shipment_completed_count,
    JSONExtractInt(data, 'before','shipment_confirmed_by_service_provider_count') AS shipment_confirmed_by_service_provider_count,
    JSONExtractInt(data, 'before','shipment_awaited_service_provider_confirmation_count') AS shipment_awaited_service_provider_confirmation_count,
    JSONExtractInt(data, 'before','shipment_init_count') AS shipment_init_count,
    JSONExtractInt(data, 'before','shipment_flight_arrived_count') AS shipment_flight_arrived_count,
    JSONExtractInt(data, 'before','shipment_flight_departed_count') AS shipment_flight_departed_count,
    JSONExtractInt(data, 'before','shipment_cargo_handed_over_at_destination_count') AS shipment_cargo_handed_over_at_destination_count,
    JSONExtractInt(data, 'before','shipment_is_active_count') AS shipment_is_active_count,
    JSONExtractInt(data, 'before','shipment_in_progress_count') AS shipment_in_progress_count,
    JSONExtractInt(data, 'before','shipment_received_count') AS shipment_received_count,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','created_at')) AS created_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','updated_at')) AS updated_at,
    toUnixTimestamp64Milli(parseDateTime64BestEffort(visitParamExtractString(visitParamExtractRaw(data, 'before'), 'operation_updated_at'), 6)) AS version,
    1 AS sign,
    JSONExtractInt(data, 'before','revenue_desk_visit_count') AS revenue_desk_visit_count,
    JSONExtractInt(data, 'before','so1_visit_count') AS so1_visit_count,
    JSONExtractString(data, 'before','status') AS status,
    JSONExtractString(data, 'before','last_action') AS last_action,
    JSONExtractInt(data, 'before','rate_deviation_from_booking_rate') AS rate_deviation_from_booking_rate,
    JSONExtractInt(data, 'before','rate_deviation_from_booking_on_cluster_base_rate') AS rate_deviation_from_booking_on_cluster_base_rate,
    JSONExtractInt(data, 'before','rate_deviation_from_latest_booking') AS rate_deviation_from_latest_booking,
    JSONExtractInt(data, 'before','average_booking_rate') AS average_booking_rate,
    JSONExtractInt(data, 'before','parent_rate_id') AS parent_rate_id,
    JSONExtractInt(data, 'before','booking_rate_count') AS booking_rate_count,
    toUUIDOrZero(JSONExtractString(data, 'before','parent_validity_id')) AS parent_validity_id,
    JSONExtractInt(data, 'before','height') AS height,
    JSONExtractInt(data, 'before','breadth') AS breadth,
    JSONExtractInt(data, 'before','length') AS length,
    JSONExtractInt(data, 'before','maximum_weight') AS maximum_weight,
    JSONExtractInt(data, 'before','flight_uuid') AS flight_uuid,
    JSONExtractString(data, 'before','discount_type') AS discount_type,
    JSONExtractInt(data, 'before','importer_exporter_id') AS importer_exporter_id,
    JSONExtractString(data, 'before','rate_not_available_entry') AS rate_not_available_entry,
    JSONExtractInt(data, 'before','shipment_cargo_handed_over_at_origin_count') AS shipment_cargo_handed_over_at_origin_count,
    JSONExtractInt(data, 'before','shipment_confirmed_by_importer_exporter_count') AS shipment_confirmed_by_importer_exporter_count,
    JSONExtractInt(data, 'before','rate_deviation_from_cluster_base_rate') AS rate_deviation_from_cluster_base_rate,
    JSONExtractInt(data, 'before','performed_by_id') AS performed_by_id,
    JSONExtractString(data, 'before','performed_by_type') AS performed_by_type,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','operation_created_at')) AS operation_created_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'before','operation_updated_at')) AS operation_updated_at,
    JSONExtractInt(data, 'before','is_deleted') AS is_deleted,
    FROM brahmastra.kafka_air_freight_rate_statistics
    WHERE JSONExtractString(data, 'before') IS NOT NULL AND JSONExtractString(data,'op') = 'u';

CREATE MATERIALIZED VIEW brahmastra.air_freight_after_rate_statistics TO brahmastra.air_freight_rate_statistics_temp
(
    id UInt256,
    identifier FixedString(256),
    validity_id UUID,
    rate_id UUID,
    origin_airport_id UUID,
    destination_airport_id UUID,
    origin_country_id UUID,
    destination_country_id UUID,
    origin_continent_id UUID,
    destination_continent_id UUID,
    origin_region_id UUID,
    destination_region_id UUID,
    origin_trade_id UUID,
    destination_trade_id UUID,
    origin_pricing_zone_map_id UUID,
    destination_pricing_zone_map_id UUID,
    price Float64,
    lower_limit Float64,
    upper_limit Float64,
    standard_price Float64,
    currency FixedString(3),
    validity_start Date,
    validity_end Date,
    density_category FixedString(256),
    max_density_weight Float64,
    min_density_weight Float64,
    airline_id UUID,
    service_provider_id UUID,
    accuracy Float64 DEFAULT -1.0,
    source FixedString(256),
    likes_count UInt16 DEFAULT 0,
    dislikes_count UInt16 DEFAULT 0,
    feedback_recieved_count UInt16 DEFAULT 0,
    dislikes_rate_reverted_count UInt16 DEFAULT 0,
    spot_search_count UInt16 DEFAULT 0,
    buy_quotations_created UInt16 DEFAULT 0,
    sell_quotations_created UInt16 DEFAULT 0,
    checkout_count UInt16 DEFAULT 0,
    bookings_created UInt16 DEFAULT 0,
    rate_created_at DateTime DEFAULT now(),
    rate_updated_at DateTime DEFAULT now(),
    validity_created_at DateTime DEFAULT now(),
    validity_updated_at DateTime DEFAULT now(),
    commodity FixedString(256),
    commodity_type FixedString(256),
    commodity_sub_type FixedString(256),
    operation_type FixedString(256),
    shipment_type FixedString(256),
    stacking_type FixedString(256),
    origin_local_id UUID,
    destination_local_id UUID,
    surcharge_id UUID,
    cogo_entity_id UUID,
    price_type FixedString(256),
    rate_type FixedString(256),
    sourced_by_id UUID,
    procured_by_id UUID,
    shipment_aborted_count UInt16 DEFAULT 0,
    shipment_cancelled_count UInt16 DEFAULT 0,
    shipment_completed_count UInt16 DEFAULT 0,
    shipment_confirmed_by_service_provider_count UInt16 DEFAULT 0,
    shipment_awaited_service_provider_confirmation_count UInt16 DEFAULT 0,
    shipment_init_count UInt16 DEFAULT 0,
    shipment_flight_arrived_count UInt16 DEFAULT 0,
    shipment_flight_departed_count UInt16 DEFAULT 0,
    shipment_cargo_handed_over_at_destination_count UInt16 DEFAULT 0,
    shipment_is_active_count UInt16 DEFAULT 0,
    shipment_in_progress_count UInt16 DEFAULT 0,
    shipment_received_count UInt16 DEFAULT 0,
    created_at DateTime DEFAULT now(),
    updated_at DateTime DEFAULT now(),
    version UInt32 DEFAULT 1,
    sign Int8 DEFAULT 1,
    revenue_desk_visit_count UInt16 DEFAULT 0,
    so1_visit_count UInt16 DEFAULT 0,
    status FixedString(10) DEFAULT 'active',
    last_action FixedString(10) DEFAULT 'create',
    rate_deviation_from_booking_rate Float32 DEFAULT 0,
    rate_deviation_from_booking_on_cluster_base_rate Float32 DEFAULT 0,
    rate_deviation_from_latest_booking Float32 DEFAULT 0,
    average_booking_rate Float64 DEFAULT -1,
    parent_rate_id UUID,
    booking_rate_count UInt16 DEFAULT 0,
    parent_validity_id UUID,
    height Float64 DEFAULT 0,
    breadth Float64 DEFAULT 0,
    length Float64 DEFAULT 0,
    maximum_weight Float64 DEFAULT 0,
    flight_uuid UUID,
    discount_type FixedString(256),
    importer_exporter_id UUID,
    rate_not_available_entry Bool DEFAULT true,
    shipment_cargo_handed_over_at_origin_count UInt16,
    shipment_confirmed_by_importer_exporter_count UInt16 ,
    rate_deviation_from_cluster_base_rate Float64 DEFAULT 0,
    performed_by_id UUID,
    performed_by_type FixedString(256),
    operation_created_at DateTime,
    operation_updated_at DateTime,
    is_deleted Bool DEFAULT false
) AS
    SELECT
    JSONExtractInt(data, 'after','id') AS id,
    toUUIDOrZero(JSONExtractString(data, 'after','identifier')) AS identifier,
    toUUIDOrZero(JSONExtractString(data, 'after','validity_id')) AS validity_id,
    toUUIDOrZero(JSONExtractString(data, 'after','rate_id')) AS rate_id,
    toUUIDOrZero(JSONExtractString(data, 'after','origin_airport_id')) AS origin_airport_id,
    toUUIDOrZero(JSONExtractString(data, 'after','destination_airport_id')) AS destination_airport_id,
    toUUIDOrZero(JSONExtractString(data, 'after','origin_country_id')) AS origin_country_id,
    toUUIDOrZero(JSONExtractString(data, 'after','destination_country_id')) AS destination_country_id,
    toUUIDOrZero(JSONExtractString(data, 'after','origin_continent_id')) AS origin_continent_id,
    toUUIDOrZero(JSONExtractString(data, 'after','destination_continent_id')) AS destination_continent_id,
    toUUIDOrZero(JSONExtractString(data, 'after','origin_region_id')) AS origin_region_id,
    toUUIDOrZero(JSONExtractString(data, 'after','destination_region_id')) AS destination_region_id,
    toUUIDOrZero(JSONExtractString(data, 'after','origin_trade_id')) AS origin_trade_id,
    toUUIDOrZero(JSONExtractString(data, 'after','destination_trade_id')) AS destination_trade_id,
    toUUIDOrZero(JSONExtractString(data, 'after','origin_pricing_zone_map_id')) AS origin_pricing_zone_map_id,
    toUUIDOrZero(JSONExtractString(data, 'after','destination_pricing_zone_map_id')) AS destination_pricing_zone_map_id,
    toUUIDOrZero(JSONExtractString(data, 'after','price')) AS price,
    toUUIDOrZero(JSONExtractString(data, 'after','lower_limit')) AS lower_limit,
    toUUIDOrZero(JSONExtractString(data, 'after','upper_limit')) AS upper_limit,
    toUUIDOrZero(JSONExtractString(data, 'after','standard_price')) AS standard_price,
    JSONExtractString(data, 'after','currency') AS currency,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','validity_start')) AS validity_start,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','validity_end')) AS validity_end,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','density_category')) AS density_category,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','max_density_weight')) AS max_density_weight,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','min_density_weight')) AS min_density_weight,
    toUUIDOrZero(JSONExtractString(data, 'after','airline_id')) AS airline_id,
    toUUIDOrZero(JSONExtractString(data, 'after','service_provider_id')) AS service_provider_id,
    toUUIDOrZero(JSONExtractString(data, 'after','accuracy')) AS accuracy,
    toUUIDOrZero(JSONExtractString(data, 'after','source')) AS source,
    toUUIDOrZero(JSONExtractString(data, 'after','likes_count')) AS likes_count,
    JSONExtractInt(data, 'after','dislikes_count') AS dislikes_count,
    JSONExtractInt(data, 'after','feedback_recieved_count') AS feedback_recieved_count,
    JSONExtractInt(data, 'after','dislikes_rate_reverted_count') AS dislikes_rate_reverted_count,
    JSONExtractInt(data, 'after','spot_search_count') AS spot_search_count,
    JSONExtractInt(data, 'after','buy_quotations_created') AS buy_quotations_created,
    JSONExtractInt(data, 'after','sell_quotations_created') AS sell_quotations_created,
    JSONExtractInt(data, 'after','checkout_count') AS checkout_count,
    JSONExtractInt(data, 'after','bookings_created') AS bookings_created,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','rate_created_at')) AS rate_created_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','rate_updated_at')) AS rate_updated_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','validity_created_at')) AS validity_created_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','validity_updated_at')) AS validity_updated_at,
    JSONExtractString(data, 'after','commodity') AS commodity,
    JSONExtractString(data, 'after','commodity_type') AS commodity_type,
    JSONExtractString(data, 'after','commodity_sub_type') AS commodity_sub_type,
    JSONExtractInt(data, 'after','operation_type') AS operation_type,
    JSONExtractString(data, 'after','shipment_type') AS shipment_type,
    JSONExtractString(data, 'after','stacking_type') AS stacking_type,
    toUUIDOrZero(JSONExtractString(data, 'after','origin_local_id')) AS origin_local_id,
    toUUIDOrZero(JSONExtractString(data, 'after','destination_local_id')) AS destination_local_id,
    toUUIDOrZero(JSONExtractString(data, 'after','surcharge_id')) AS surcharge_id,
    toUUIDOrZero(JSONExtractString(data, 'after','cogo_entity_id')) AS cogo_entity_id,
    JSONExtractString(data, 'after','price_type') AS price_type,
    JSONExtractString(data, 'after','rate_type') AS rate_type,
    toUUIDOrZero(JSONExtractString(data, 'after','sourced_by_id')) AS sourced_by_id,
    toUUIDOrZero(JSONExtractString(data, 'after','procured_by_id')) AS procured_by_id,
    JSONExtractInt(data, 'after','shipment_aborted_count') AS shipment_aborted_count,
    JSONExtractInt(data, 'after','shipment_cancelled_count') AS shipment_cancelled_count,
    JSONExtractInt(data, 'after','shipment_completed_count') AS shipment_completed_count,
    JSONExtractInt(data, 'after','shipment_confirmed_by_service_provider_count') AS shipment_confirmed_by_service_provider_count,
    JSONExtractInt(data, 'after','shipment_awaited_service_provider_confirmation_count') AS shipment_awaited_service_provider_confirmation_count,
    JSONExtractInt(data, 'after','shipment_init_count') AS shipment_init_count,
    JSONExtractInt(data, 'after','shipment_flight_arrived_count') AS shipment_flight_arrived_count,
    JSONExtractInt(data, 'after','shipment_flight_departed_count') AS shipment_flight_departed_count,
    JSONExtractInt(data, 'after','shipment_cargo_handed_over_at_destination_count') AS shipment_cargo_handed_over_at_destination_count,
    JSONExtractInt(data, 'after','shipment_is_active_count') AS shipment_is_active_count,
    JSONExtractInt(data, 'after','shipment_in_progress_count') AS shipment_in_progress_count,
    JSONExtractInt(data, 'after','shipment_received_count') AS shipment_received_count,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','created_at')) AS created_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','updated_at')) AS updated_at,
    toUnixTimestamp64Milli(parseDateTime64BestEffort(visitParamExtractString(visitParamExtractRaw(data, 'after'), 'operation_updated_at'), 6)) AS version,
        -1 AS sign,
    JSONExtractInt(data, 'after','revenue_desk_visit_count') AS revenue_desk_visit_count,
    JSONExtractInt(data, 'after','so1_visit_count') AS so1_visit_count,
    JSONExtractString(data, 'after','status') AS status,
    JSONExtractString(data, 'after','last_action') AS last_action,
    JSONExtractInt(data, 'after','rate_deviation_from_booking_rate') AS rate_deviation_from_booking_rate,
    JSONExtractInt(data, 'after','rate_deviation_from_booking_on_cluster_base_rate') AS rate_deviation_from_booking_on_cluster_base_rate,
    JSONExtractInt(data, 'after','rate_deviation_from_latest_booking') AS rate_deviation_from_latest_booking,
    JSONExtractInt(data, 'after','average_booking_rate') AS average_booking_rate,
    JSONExtractInt(data, 'after','parent_rate_id') AS parent_rate_id,
    JSONExtractInt(data, 'after','booking_rate_count') AS booking_rate_count,
    toUUIDOrZero(JSONExtractString(data, 'after','parent_validity_id')) AS parent_validity_id,
    JSONExtractInt(data, 'after','height') AS height,
    JSONExtractInt(data, 'after','breadth') AS breadth,
    JSONExtractInt(data, 'after','length') AS length,
    JSONExtractInt(data, 'after','maximum_weight') AS maximum_weight,
    JSONExtractInt(data, 'after','flight_uuid') AS flight_uuid,
    JSONExtractString(data, 'after','discount_type') AS discount_type,
    JSONExtractInt(data, 'after','importer_exporter_id') AS importer_exporter_id,
    JSONExtractString(data, 'after','rate_not_available_entry') AS rate_not_available_entry,
    JSONExtractInt(data, 'after','shipment_cargo_handed_over_at_origin_count') AS shipment_cargo_handed_over_at_origin_count,
    JSONExtractInt(data, 'after','shipment_confirmed_by_importer_exporter_count') AS shipment_confirmed_by_importer_exporter_count,
    JSONExtractInt(data, 'after','rate_deviation_from_cluster_base_rate') AS rate_deviation_from_cluster_base_rate,
    JSONExtractInt(data, 'after','performed_by_id') AS performed_by_id,
    JSONExtractString(data, 'after','performed_by_type') AS performed_by_type,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','operation_created_at')) AS operation_created_at,
    parseDateTimeBestEffortOrZero(JSONExtractString(data, 'after','operation_updated_at')) AS operation_updated_at,
    JSONExtractInt(data, 'after','is_deleted') AS is_deleted,
    FROM brahmastra.kafka_air_freight_rate_statistics
    WHERE JSONExtractString(data, 'after') IS NOT NULL AND JSONExtractString(data,'op') = 'u';

CREATE TABLE brahmastra.air_freight_rate_statistics_temp
(
    id UInt256,
    identifier FixedString(256),
    validity_id UUID,
    rate_id UUID,
    origin_airport_id UUID,
    destination_airport_id UUID,
    origin_country_id UUID,
    destination_country_id UUID,
    origin_continent_id UUID,
    destination_continent_id UUID,
    origin_region_id UUID,
    destination_region_id UUID,
    origin_trade_id UUID,
    destination_trade_id UUID,
    origin_pricing_zone_map_id UUID,
    destination_pricing_zone_map_id UUID,
    price Float64,
    lower_limit Float64,
    upper_limit Float64,
    standard_price Float64,
    currency FixedString(3),
    validity_start Date,
    validity_end Date,
    density_category FixedString(256),
    max_density_weight Float64,
    min_density_weight Float64,
    airline_id UUID,
    service_provider_id UUID,
    accuracy Float64 DEFAULT -1.0,
    source FixedString(256),
    likes_count UInt16 DEFAULT 0,
    dislikes_count UInt16 DEFAULT 0,
    feedback_recieved_count UInt16 DEFAULT 0,
    dislikes_rate_reverted_count UInt16 DEFAULT 0,
    spot_search_count UInt16 DEFAULT 0,
    buy_quotations_created UInt16 DEFAULT 0,
    sell_quotations_created UInt16 DEFAULT 0,
    checkout_count UInt16 DEFAULT 0,
    bookings_created UInt16 DEFAULT 0,
    rate_created_at DateTime DEFAULT now(),
    rate_updated_at DateTime DEFAULT now(),
    validity_created_at DateTime DEFAULT now(),
    validity_updated_at DateTime DEFAULT now(),
    commodity FixedString(256),
    commodity_type FixedString(256),
    commodity_sub_type FixedString(256),
    operation_type FixedString(256),
    shipment_type FixedString(256),
    stacking_type FixedString(256),
    origin_local_id UUID,
    destination_local_id UUID,
    surcharge_id UUID,
    cogo_entity_id UUID,
    price_type FixedString(256),
    rate_type FixedString(256),
    sourced_by_id UUID,
    procured_by_id UUID,
    shipment_aborted_count UInt16 DEFAULT 0,
    shipment_cancelled_count UInt16 DEFAULT 0,
    shipment_completed_count UInt16 DEFAULT 0,
    shipment_confirmed_by_service_provider_count UInt16 DEFAULT 0,
    shipment_awaited_service_provider_confirmation_count UInt16 DEFAULT 0,
    shipment_init_count UInt16 DEFAULT 0,
    shipment_flight_arrived_count UInt16 DEFAULT 0,
    shipment_flight_departed_count UInt16 DEFAULT 0,
    shipment_cargo_handed_over_at_destination_count UInt16 DEFAULT 0,
    shipment_is_active_count UInt16 DEFAULT 0,
    shipment_in_progress_count UInt16 DEFAULT 0,
    shipment_received_count UInt16 DEFAULT 0,
    created_at DateTime DEFAULT now(),
    updated_at DateTime DEFAULT now(),
    version UInt32 DEFAULT 1,
    sign Int8 DEFAULT 1,
    revenue_desk_visit_count UInt16 DEFAULT 0,
    so1_visit_count UInt16 DEFAULT 0,
    status FixedString(10) DEFAULT 'active',
    last_action FixedString(10) DEFAULT 'create',
    rate_deviation_from_booking_rate Float32 DEFAULT 0,
    rate_deviation_from_booking_on_cluster_base_rate Float32 DEFAULT 0,
    rate_deviation_from_latest_booking Float32 DEFAULT 0,
    average_booking_rate Float64 DEFAULT -1,
    parent_rate_id UUID,
    booking_rate_count UInt16 DEFAULT 0,
    parent_validity_id UUID,
    height Float64 DEFAULT 0,
    breadth Float64 DEFAULT 0,
    length Float64 DEFAULT 0,
    maximum_weight Float64 DEFAULT 0,
    flight_uuid UUID,
    discount_type FixedString(256),
    importer_exporter_id UUID,
    rate_not_available_entry Bool DEFAULT true,
    shipment_cargo_handed_over_at_origin_count UInt16,
    shipment_confirmed_by_importer_exporter_count UInt16 ,
    rate_deviation_from_cluster_base_rate Float64 DEFAULT 0,
    performed_by_id UUID,
    performed_by_type FixedString(256),
    operation_created_at DateTime,
    operation_updated_at DateTime,
    is_deleted Bool DEFAULT false
)
ENGINE = VersionedCollapsingMergeTree(sign, version)
PRIMARY KEY (is_deleted,container_size ,origin_country_id,origin_port_id,shipping_line_id,rate_id,validity_id, id, tag, price, bas_standard_price, version)
ORDER BY (is_deleted,container_size ,origin_country_id,origin_port_id,shipping_line_id,rate_id,validity_id, id, tag, price, bas_standard_price, version);